function getClosestSortable(e){for(;e;){if(e.className&&e.className.indexOf("react-sortable-item")>=0)return e;e=e.parentNode}return null}function getCurrentPosition(e){for(var t=e.parentNode,r=t.children,o=0;o<r.length;o+=1)if(r[o]===e)return{prev:r[o-1]||null,next:r[o+1]||null}}function getNodePosition(e){return{next:getNextNode(e),prev:getPrevNode(e)}}function getNextNode(e){for(var t,r=e.parentNode,o=r.children,n=1/0,i=null,a=0;a<o.length;a+=1)t=o[a],t!==e&&t.offsetY>e.offsetY&&t.offsetY-e.offsetY<n&&(n=t.offsetY-e.offsetY,i=t);return i}function getPrevNode(e){for(var t,r=e.parentNode,o=r.children,n=1/0,i=null,a=o.length-1;a>=0;a-=1)t=o[a],t!==e&&t.offsetY<e.offsetY&&e.offsetY-t.offsetY<n&&(n=e.offsetY-t.offsetY,i=t);return i}var ReactSortable=React.createClass({displayName:"ReactSortable",_indexChildren:function(e){var t,r=[],o="node-";this.sortableMap={};for(var n=0;n<e.length;n+=1)t=o+(n+1),r.push(t),e[n]=React.addons.cloneWithProps(e[n],{className:"react-sortable-item","data-sortable-id":t}),this.sortableMap[t]=e[n];this.setState({order:r})},componentWillMount:function(){this._indexChildren(this.props.children)},componentWillReceiveProps:function(e){e.children&&this._indexChildren(e.children)},getInitialState:function(){return this.activeNode=null,{order:[]}},onDragStart:function(e){var t=getClosestSortable(e.target);t.style.position="relative",this.activeNode=t},onDragStop:function(e){var t=getClosestSortable(e.target);t.style.position="static",this.activeNode=null},onDrag:function(){var e=getNodePosition(this.activeNode),t=getCurrentPosition(this.activeNode);if(e&&(e.next!==t.next||e.prev!==t.prev)){var r=this.activeNode.getAttribute("data-sortable-id"),o=this.state.order;if(o.splice(o.indexOf(r),1),e.next)if(e.prev){var n=o.indexOf(e.prev.getAttribute("data-sortable-id"));o.splice(n+1,0,r)}else o.unshift(r);else o.push(r);this.setState({order:o})}},render:function(){console.log(this.state);var e=this.state.order.map(function(e){var t=this.sortableMap[e];return React.createElement(ReactDrag,{handle:this.props.handle,onDrag:this.onDrag,onStart:this.onDragStart,onStop:this.onDragStop},t)},this);return React.createElement("div",{ref:"wrapper"},e)}});