function getClosestSortable(t){for(;t;){if(t.className&&t.className.indexOf("react-sortable-item")>=0)return t;t=t.parentNode}return null}function getNextNode(t){for(var e,a=t.parentNode,i=a.children,n=1/0,o=null,s=t.offsetTop,r=0;r<i.length;r+=1)if(e=i[r],e.getAttribute("data-sortable-key")!==t.getAttribute("data-sortable-key")){var l=e.offsetTop-s;l>0&&n>l&&(n=l,o=e)}return o}var ReactSortable=React.createClass({displayName:"ReactSortable",_indexChildren:function(t){var e,a=[],i="node-";this.sortableMap={};for(var n=0;n<t.length;n+=1)e=i+(n+1),a.push(e),t[n]=React.addons.cloneWithProps(t[n],{className:"react-sortable-item",key:e,"data-sortable-key":e}),this.sortableMap[e]=t[n];this.setState({order:a})},componentWillMount:function(){this._indexChildren(this.props.children)},componentWillReceiveProps:function(t){t.children&&this._indexChildren(t.children)},getInitialState:function(){return this.activeNode=null,{order:[],activeItem:null}},onDragStop:function(){this.setState({activeItem:null})},onDrag:function(){var t=this.activeNode.nextSibling,e=getNextNode(this.activeNode);if(t!==e){var a=this.activeNode.getAttribute("key"),i=this.state.order,n=i.length;i.splice(i.indexOf(a),1),e&&(n=i.indexOf(e.getAttribute("key"))),i.splice(n,0,a);this.setState({order:i},function(){console.log(this.activeNode.innerText)})}},onMouseDown:function(t){this.setState({initailCoordinates:{x:t.clientX,y:t.clientY}})},onMouseMove:function(t){if(!this.state.active){var e=this.state.initailCoordinates;if(!e)return;if(Math.abs(t.clientX-e.x)>=5||Math.abs(t.clientY-e.y)>=5){var a=getClosestSortable(t.target);this.setState({activeItem:a.getAttribute("data-sortable-key")},function(){console.log(this.refs.handle),this.refs.handle.handleDragStart(t)}.bind(this))}}},render:function(){var t,e=this.state.order.map(function(t){var e="";return this.state.activeItem===t&&(e+="react-sortable-item-active"),React.addons.cloneWithProps(this.sortableMap[t],{onMouseDown:this.onMouseDown,onMouseMove:this.onMouseMove,className:e})},this);if(this.state.activeItem){t=React.addons.cloneWithProps(this.sortableMap[this.state.activeItem],{className:"react-sortable-handle"});var a=this.state.initailCoordinates;t=React.createElement(ReactDrag,{onStop:this.onDragStop,ref:"handle",startX:a.x,startY:a.y},t)}return React.createElement("div",{ref:"wrapper"},e,t)}});