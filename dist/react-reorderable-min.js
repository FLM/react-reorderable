!function(e,t){"function"==typeof define&&define.amd?define(["React","ReactDrag"],t):"object"==typeof exports?module.exports=t(require("react/addons"),require("react-drag")):e.ReactReorderable=t(e.React,e.ReactDrag)}(this,function(e,t){"use strict";function r(e){for(;e;){if(e.className&&e.className.indexOf("react-reorderable-item")>=0)return e;e=e.parentNode}return null}function n(e,t){var r=t.getBoundingClientRect(),n=r.top,o=r.left,a=r.width,i=r.height;return e.clientY<n||e.clientY>n+i?c.NONE:e.clientX>o&&e.clientX<o+.5*a?c.NEXT:e.clientX>o+.5*a&&e.clientX<o+a?c.PREVIOUS:c.NONE}function o(e,t){var r=t.getBoundingClientRect(),n=r.top,o=r.left,a=r.width,i=r.height;return e.clientX<o||e.clientX>o+a?c.NONE:e.clientY>n&&e.clientY<n+.5*i?c.NEXT:e.clientY>n+.5*i&&e.clientY<n+i?c.PREVIOUS:c.NONE}function a(e,t,r){var a,i=t.parentNode,s=i.children,l=!1,d={};r=r||"list";for(var u=0;u<s.length&&!l;u+=1)if(a=s[u],a.getAttribute("data-reorderable-key")!==t.getAttribute("data-reorderable-key")){var p;if(p="list"===r?o(e,a):n(e,a),p!==c.NONE)return d.node=a,d.type=p,d}return d}function i(t){for(var r,n="node-",o={},a=[],i=0;i<t.length;i+=1)r=n+(i+1),a.push(r),t[i]=e.createElement("div",{className:"react-reorderable-item",key:r,"data-reorderable-key":r},t[i]),o[r]=t[i];return{map:o,ids:a}}function s(e,t){for(var r=e.parentNode.querySelectorAll(t),n=0;n<r.length;n+=1)if(e===r[n])return!0;return!1}function l(e,t,r){var n=e.getAttribute("data-reorderable-key"),o=r.indexOf(n);r.splice(o,1);var a=t.node.getAttribute("data-reorderable-key"),i=r.indexOf(a);return t.type===c.PREVIOUS?r.splice(i+1,0,n):r.splice(i,0,n),r}var c={NONE:0,NEXT:1,PREVIOUS:2},d=e.createClass({displayName:"ReactReorderable",componentWillMount:function(){window.addEventListener("mouseup",function(){this.setState({mouseDownPosition:null})}.bind(this))},componentWillReceiveProps:function(e){if(e.children){var t=i(e.children);this.setState({order:t.ids,reorderableMap:t.map})}},getInitialState:function(){var e=i(this.props.children);return{order:e.ids,startPosition:null,activeItem:null,reorderableMap:e.map}},onDragStop:function(e){this.setState({activeItem:null,startPosition:null}),this.props.onDrop(this.state.order.map(function(e){return this.state.reorderableMap[e].props.children},this))},onDrag:function(e){var t=this.refs.handle.getDOMNode(),n=a(e,t,this.props.mode);if(n&&n.node){for(var o=this.state.order.slice(),i=l(r(t),n,this.state.order),s=!1,c=0;c<i.length&&!s;c+=1)i[c]!==o[c]&&(s=!0);s&&this.props.onChange(this.state.order.map(function(e){return this.state.reorderableMap[e].props.children},this)),this.setState({order:i})}},onMouseDown:function(e){(!this.props.handle||s(e.target,this.props.handle))&&this.setState({mouseDownPosition:{x:e.clientX,y:e.clientY}})},onMouseMove:function(e){if(!this.state.activeItem){var t=this.state.mouseDownPosition;if(!t)return;if(Math.abs(e.clientX-t.x)>=5||Math.abs(e.clientY-t.y)>=5){var n=r(e.target),o=e.nativeEvent,a=n.getAttribute("data-reorderable-key");this.props.onDragStart(this.state.reorderableMap[a]),this.activeItem=n;var i=n.parentNode&&n.parentNode.parentNode;this.setState({mouseDownPosition:null,activeItem:a,startPosition:{x:n.offsetLeft-(i&&i.scrollLeft||0),y:n.offsetTop-(i&&i.scrollTop||0)}},function(){this.refs.handle.handleDragStart(o)}.bind(this))}}},render:function(){var r,n=this.state.order.map(function(t){var r=this.state.activeItem?"noselect ":"";return this.state.activeItem===t&&(r+="react-reorderable-item-active"),e.addons.cloneWithProps(this.state.reorderableMap[t],{ref:"active",onMouseDown:this.onMouseDown,onMouseMove:this.onMouseMove,className:r})},this);if(this.state.activeItem){var o=this.state.startPosition;r=e.addons.cloneWithProps(this.state.reorderableMap[this.state.activeItem],{className:"react-reorderable-handle"}),r=e.createElement(t,{onStop:this.onDragStop,onDrag:this.onDrag,ref:"handle",start:{x:o.x,y:o.y}},r)}return e.createElement("div",{ref:"wrapper"},n,r)}});return d.propTypes={onDragStart:e.PropTypes.func,onDrag:e.PropTypes.func,onDrop:e.PropTypes.func,onChange:e.PropTypes.func},d.defaultProps={onDragStart:function(){},onDrag:function(){},onDrop:function(){},onChange:function(){}},d});